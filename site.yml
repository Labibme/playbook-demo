---
- name: testing
  hosts: all
  remote_user: labib

  vars:
    # Username
    user: myproject
    # Timezone
    timezone: 'Europe/Paris'

  tasks:

    ###################
    # User Management
    ###################
    - name: Create user {{ user }}
      become: true
      become_method: sudo
      user: name={{ user }}
            comment="{{ user }} user"
            shell=/bin/bash

    - name: Add {{ user }} to sudoers
      become: true
      become_method: sudo
      template: src=templates/sudoers-user.j2
                dest=/etc/sudoers.d/{{ user }}-sudoer
                validate='visudo -cf %s'

    - name: Add my public key to {{ user }}
      become: true
      become_method: sudo
      authorized_key: user={{ user }}
                      key="{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

    ###################
    # Time management
    ###################
    - name: Set local timezone
      become: true
      become_method: sudo
      copy: content={{ timezone }}
            dest=/etc/timezone
      notify: update tzdata

    - name: Install NTP (and update apt cache for the first install)
      become: true
      become_method: sudo
      yum: name=ntp state=present
           update_cache=yes

    - name: Start the ntp service
      become: true
      become_method: sudo
      service: name=ntpd state=started enabled=true

    ###################
    # Security
    ###################
    - name: Install fail2ban
      become: true
      become_method: sudo
      yum: name=fail2ban state=present

    - name: Start fail2ban service
      become: true
      become_method: sudo
      service: name=fail2ban state=started enabled=true

    - name: Copy iptables rules
      become: true
      become_method: sudo
      copy: src=files/iptables.up
            dest=/etc/iptables.up
      notify: reload iptables

    - name: save iptables init script # To load iptables on server restart
      become: true
      become_method: sudo
      command: iptables-save

    ###################
    # Misc. tools
    ###################
    - name: Install usefull system tools
      become: true
      become_method: sudo
      yum: name={{ item }} state=present
      with_items:
        - vim
        - htop
        - git
        - tig
        - ncdu

    ###################
    # Nginx
    ###################
    - name: Install Nginx
      become: true
      become_method: sudo
      yum: name=nginx state=latest

    - name: Start nginx service
      become: true
      become_method: sudo
      service: name=nginx state=started enabled=true

    - name: Remove default site config
      become: true
      become_method: sudo
      file: path=/etc/nginx/sites-enabled/default
            state=absent

    ###################
    # Supervisor
    ###################
    - name: Install Supervisor
      become: true
      become_method: sudo
      yum: name=supervisor state=latest

    - name: Start supervisor service
      become: true
      become_method: sudo
      service: name=supervisord state=started enabled=true

    ###################
    # Python / Virtualenv
    ###################
    - name: Install pip
      become: true
      become_method: sudo
      yum: name=python-pip state=latest

    - name: Install virtualenv
      become: true
      become_method: sudo
      pip: name=virtualenv

    ###################
    # Deploying Django--an-app-at-a-time
    ###################
    - name: Git clone/pull Django--an-app-at-a-time
      become: true
      become_user: labib
      git: repo=git@github.com:Labibme/Django--an-app-at-a-time.git
           dest=/home/{{ user }}/project
      remote_user: "{{ user }}"

    - name: Create a new requirement file
      become: true
      become_method: sudo
      copy: src=files/requirements.txt
            dest=/home/{{ user }}/project/requirements.txt
      remote_user: "{{ user }}"

    - name: Create virtualenv with requirements
      become: true
      become_method: sudo
      pip: requirements=/home/{{ user }}/project/requirements.txt
           virtualenv=/home/{{ user }}/venv
      remote_user: "{{ user }}"

    - name: Setup Gunicorn config
      become: true
      become_method: sudo
      template: src=templates/gunicorn.conf.py.j2
                dest=/home/{{ user }}/gunicorn.conf.py
      remote_user: "{{ user }}"
      notify: restart supervisor

    - name: Setup supervisor config (to manage gunicorn)
      become: true
      become_method: sudo
      template: src=templates/supervisor.conf.j2
                dest=/etc/supervisord.d/{{ user }}.conf
      notify: restart supervisor

    - name: Setup Nginx config for our app
      become: true
      become_method: sudo
      template: src=templates/nginx.conf.j2
                dest=/etc/nginx/sites-enabled/{{ user }}.conf
      notify: restart nginx

    - name: Deploy static files
      become: true
      become_method: sudo
      command: /home/{{ user }}/venv/bin/python ./manage.py collectstatic --noinput
               chdir=/home/{{ user }}/project/
      remote_user: "{{ user }}"

  ###################
  # Handlers
  ###################
  handlers:
    - name: reload iptables
      become: true
      become_method: sudo
      action: shell /sbin/iptables-restore < /etc/iptables.up
    - name: update tzdata
      become: true
      become_method: sudo
      command: tzdata-update
    - name: restart nginx
      become: true
      become_method: sudo
      service: name=nginx state=restarted enabled=yes
    - name: restart supervisor
      become: true
      become_method: sudo
      service: name=supervisord state=restarted enabled=yes
    - name: restart supervisor
      become: true
      become_method: sudo
      service: name=firewalld state=stop enabled=no
